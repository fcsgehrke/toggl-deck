{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample deck api for testing purposes.",
        "title": "Toggl Deck API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Felipe C. Gehrke",
            "url": "https://github.com/fcsgehrke/toggl-deck",
            "email": "fcgehrke@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api/v1/decks",
    "paths": {
        "/": {
            "post": {
                "description": "Creates new decks with all cards or specific ones. Also, it's possible to shuffle the deck.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new deck",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Shuffle cards on the deck.",
                        "name": "shuffled",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "description": "The card codes to be added to the deck.",
                        "name": "cards",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deck.CreateDeckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "Returns an existing opened deck with all cards.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Opens an existing deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID (uuid) of the deck.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deck.OpenDeckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    }
                }
            }
        },
        "/{id}/draw": {
            "get": {
                "description": "Draws one or more cards from the deck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Draws a card from the deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID (uuid) of the deck.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of cards to draw from the deck.",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deck.DrawCardResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.HttpError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "deck.CardResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "suit": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "deck.CreateDeckResponse": {
            "type": "object",
            "properties": {
                "deck_id": {
                    "type": "string"
                },
                "remaining": {
                    "type": "integer"
                },
                "shuffled": {
                    "type": "boolean"
                }
            }
        },
        "deck.DrawCardResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/deck.CardResponse"
                    }
                }
            }
        },
        "deck.OpenDeckResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/deck.CardResponse"
                    }
                },
                "deck_id": {
                    "type": "string"
                },
                "remaining": {
                    "type": "integer"
                },
                "shuffled": {
                    "type": "boolean"
                }
            }
        }
    }
}